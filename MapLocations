import folium
import pandas as p
import json

m = folium.Map(tiles="cartodb positron")
m_test = folium.Map(tiles="cartodb positron")
gps_locations = "gps_locations.json"
test_images = "iwildcam2022_test_information.json"

coordinates_kenya = [-0.023559, 37.906193]
coord1 = [5.387439, 33.734457]
coord2 = [-5.169978, 43.630227]
m_kenya = folium.Map(location=coordinates_kenya, zoom_start=3, tiles="cartodb positron")
with open(test_images) as data_file:
    data = json.load(data_file)
df_test = p.json_normalize(data, "images")

locations = set(df_test.loc[:, "location"].values.tolist())
# Make a list to store all camera locations in kenya
locations_kenya = []


# print(df_test.head())
def loc_to_coord(locations, file, map_f):
    dataframe = p.read_json(file).transpose()
    # print(dataframe.head())
    try:
        location = dataframe.loc[int(locations)]
        lat, lon = location["latitude"], location["longitude"]
        # print(lat, lon)
        folium.Marker(location=[lat, lon]).add_to(map_f)

        # add to kenya map
        if coord2[0] < lat < coord1[0] and coord1[1] < lon < coord2[1]:
            folium.Marker(location=[lat, lon]).add_to(m_kenya)
            locations_kenya.append(int(locations))

    except:
        return


def show_all_locs(file):
    df = p.read_json(file).transpose()
    for ind in df.index:
        lat, lon = df["latitude"][ind], df["longitude"][ind]
        folium.Marker(location=[lat, lon]).add_to(m)


show_all_locs(gps_locations)
for location in locations:
    loc_to_coord(location, gps_locations, m_test)

m.save("footprint.html")
m_test.save("test_locations.html")
m_kenya.save("Kenya.html")
